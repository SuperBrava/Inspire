@import url(https://fonts.googleapis.com/css?family=Montserrat);

$bg-color: #f2f2f2;
$color-primary: #505050;
$color-secondary: #E2E2E2;
$main-font: ;

::-webkit-scrollbar {
    display: none;
}

body,html{
  margin:0;padding:0;
  overflow: hidden;
  font-family: 'Barlow', 'Montserrat', Arial, sans-serif;
  h1{
    font-size: 4em;
    font-weight: normal;
    color: black;
    letter-spacing: 0.055em;
    text-align: center;
  }
}

.logo{
  height: 80%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  margin: auto;
  padding-top: 10%;
  padding-bottom:10%;
}

.award{
  height: 30%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 5px;
}

.down-arrow{
  height: 100px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  }

div.hidden {
  display:none;
}

.wrapper {
  /* The height needs to be set to a fixed value for the effect to work.
   * 100vh is the full height of the viewport. */
  height: 100vh;
  /* The scaling of the images would add a horizontal scrollbar, so disable x overflow. */
  overflow-x: hidden;
  /* Enable scrolling on the page. */
  overflow-y: auto;
  /* Set the perspective to 2px. This is essentailly the simulated distance from the viewport to transformed objects.*/
  perspective: 3px;
}

.section {
  /* Needed for children to be absolutely positioned relative to the parent. */
  position: relative;
  /* The height of the container. Must be set, but it doesn't really matter what the value is. */
  height: 75vh;
  margin: auto;
  width: 93.5%;
  /* For text formatting. */
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  overflow-y: hidden;
  overflow-x: hidden;
  background-repeat: no-repeat;
}

.top{
  margin-top: -10vh;
  height: 85vh
}

.parallax::after {
  /* Display and position the pseudo-element */
  content: " ";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;

  /* Move the pseudo-element back away from the camera,
   * then scale it back up to fill the viewport.
   * Because the pseudo-element is further away, it appears to move more slowly, like in real life. */
  transform: translateZ(-1px) scale(1.5);
  /* Force the background image to fill the whole element. */
  background-size: 100%;
  /* Keep the image from overlapping sibling elements. */
  z-index: -1;
}

/* The styling for the static div. */
.static {
  background: white;
  height: 280px;
}
.break{
  height: 70px;
}

/* Sets the actual background images to adorable kitties. This part is crucial. */
.bg1::after {
  background-image: url("img/background1.jpg");
  background-repeat: no-repeat;
  background-position: center;
}

.bg2::after {
  background-image: url("img/background2.jpg");
  background-repeat: no-repeat;
  background-position: 50% 100%;
}

.bg3::after {
  background-image: url("img/background3.jpg");
  background-repeat: no-repeat;
  background-position: 50% 45%;
}

.bg4::after {
  background-image: url("img/background4.jpg");
  background-repeat: no-repeat;
  background-position: 0% 50%;
}

.bg5::after {
  background-image: url("img/background5.jpg");
  background-repeat: no-repeat;
  background-position: center;
}

.bg6::after {
  background-image: url("img/background6.jpeg");
  background-repeat: no-repeat;
  background-position: 50% 60%;
}
